<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="Bluetask.Views.ProcessesPage"
    x:Name="root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:models="using:Bluetask.Models"
    xmlns:viewmodels="using:Bluetask.ViewModels"
    xmlns:sys="using:System"
    xmlns:converters="using:Bluetask.Services.Converters"
    xmlns:local="using:Bluetask.Views"
    mc:Ignorable="d"
    Background="{StaticResource App.GradientBackground}"
    RequestedTheme="Dark">

    <Page.Resources>
        <converters:HistoryToPointsConverter x:Key="HistoryToPointsConverter"/>
        <LinearGradientBrush x:Key="ProcessRowBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#1F2838" Offset="0"/>
            <GradientStop Color="#1A2434" Offset="1"/>
        </LinearGradientBrush>

        <!-- Slightly darker background for child rows -->
        <LinearGradientBrush x:Key="ChildRowBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#182233" Offset="0"/>
            <GradientStop Color="#152030" Offset="1"/>
        </LinearGradientBrush>

        <!-- More visible modern blue selection overlay (matches app accent #4C5CFF) -->
        <LinearGradientBrush x:Key="ProcessRowSelectedBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#334C5CFF" Offset="0"/>
            <GradientStop Color="#664C5CFF" Offset="0.35"/>
            <GradientStop Color="#664C5CFF" Offset="0.65"/>
            <GradientStop Color="#334C5CFF" Offset="1"/>
        </LinearGradientBrush>

        <!-- Converter for expand/collapse chevron -->
        <converters:BoolToChevronConverter x:Key="BoolToChevronConverter"/>
        <!-- Converter for inverse visibility -->
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <DataTemplate x:Key="LeafProcessTemplate" x:DataType="models:ProcessModel">
            <Grid Padding="12" Background="{StaticResource ProcessRowBackgroundBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="140"/>
                </Grid.ColumnDefinitions>
                <!-- Selection overlay behind content, full row height -->
                <Border Grid.ColumnSpan="6"
                        Background="{StaticResource ProcessRowSelectedBrush}"
                        Visibility="{x:Bind IsPinned, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                        IsHitTestVisible="False"/>
                <Image Source="{x:Bind Icon, Mode=OneWay}" Width="16" Height="16" Grid.Column="0" VerticalAlignment="Center"/>
                <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" Grid.Column="1" VerticalAlignment="Center" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                <TextBlock Text="{x:Bind CpuPercentDisplay, Mode=OneWay}" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                <TextBlock Text="{x:Bind MemoryDisplay, Mode=OneWay}" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                <TextBlock Text="{x:Bind GpuPercentDisplayOrDash, Mode=OneWay}" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                <StackPanel Orientation="Horizontal" Spacing="8" Grid.Column="5" VerticalAlignment="Center"
                            Visibility="{x:Bind IsGroup, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <Button Background="Transparent" BorderThickness="0" Padding="0" Click="PinProcessButton_Click" CommandParameter="{x:Bind}">
                        <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE718;"/>
                    </Button>
                    <Button Background="Transparent" BorderThickness="0" Padding="0" Click="OpenProcessLocationButton_Click" CommandParameter="{x:Bind}">
                        <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE721;"/>
                    </Button>
                    <Button Background="Transparent" BorderThickness="0" Padding="0" Click="KillProcessButton_Click" CommandParameter="{x:Bind}">
                        <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE711;"/>
                    </Button>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ParentProcessTemplate" x:DataType="models:ProcessModel">
            <StackPanel>
                <!-- Parent row: slightly bolder text for the name, all columns aligned -->
                <Grid Padding="12" Background="{StaticResource ProcessRowBackgroundBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="140"/>
                    </Grid.ColumnDefinitions>
                    <!-- Selection overlay for parent row behind content -->
                    <Border Grid.ColumnSpan="6"
                            Background="{StaticResource ProcessRowSelectedBrush}"
                            Visibility="{x:Bind IsPinned, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                            IsHitTestVisible="False"/>
                    <!-- Expand/collapse button for processes with children -->
                    <Button x:Name="expandButton"
                            Grid.Column="0"
                            Background="Transparent"
                            BorderThickness="0"
                            Padding="0"
                            Width="16"
                            Height="16"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Click="ToggleExpandButton_Click"
                            CommandParameter="{x:Bind}"
                            Visibility="{x:Bind HasChildren, Mode=OneWay}">
                        <FontIcon FontFamily="Segoe Fluent Icons"
                                  Glyph="{x:Bind IsExpanded, Mode=OneWay, Converter={StaticResource BoolToChevronConverter}}"
                                  FontSize="10"/>
                    </Button>
                    <!-- Icon shown when no children -->
                    <Image Source="{x:Bind Icon, Mode=OneWay}"
                           Width="16"
                           Height="16"
                           Grid.Column="0"
                           VerticalAlignment="Center"
                           Visibility="{x:Bind HasChildren, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}"/>
                    <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" Grid.Column="1" VerticalAlignment="Center" FontWeight="SemiBold" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                    <TextBlock Text="{x:Bind CpuPercentDisplay, Mode=OneWay}" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                    <TextBlock Text="{x:Bind MemoryDisplay, Mode=OneWay}" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                    <TextBlock Text="{x:Bind GpuPercentDisplayOrDash, Mode=OneWay}" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                    <StackPanel Orientation="Horizontal" Spacing="8" Grid.Column="5" VerticalAlignment="Center"
                                Visibility="{x:Bind IsGroup, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <Button Background="Transparent" BorderThickness="0" Padding="0" Click="PinProcessButton_Click" CommandParameter="{x:Bind}">
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE718;"/>
                        </Button>
                        <Button Background="Transparent" BorderThickness="0" Padding="0" Click="OpenProcessLocationButton_Click" CommandParameter="{x:Bind}">
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE721;"/>
                        </Button>
                        <Button Background="Transparent" BorderThickness="0" Padding="0" Click="KillProcessButton_Click" CommandParameter="{x:Bind}">
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE711;"/>
                        </Button>
                    </StackPanel>
                    <!-- Group-only actions -->
                    <StackPanel Orientation="Horizontal" Spacing="8" Grid.Column="5" VerticalAlignment="Center"
                                Visibility="{x:Bind IsGroup, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button Background="Transparent" BorderThickness="0" Padding="0" Click="KillGroupButton_Click" CommandParameter="{x:Bind}"
                                ToolTipService.ToolTip="Kill all instances">
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE711;"/>
                        </Button>
                    </StackPanel>
                </Grid>
                <!-- Child rows: only indent the name, keep all stats aligned -->
                <ItemsControl ItemsSource="{x:Bind Children, Mode=OneWay}"
                              Visibility="{x:Bind IsExpanded, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="models:ProcessModel">
                            <Grid Padding="12" Background="{StaticResource ChildRowBackgroundBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="140"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="6"
                                        Background="{StaticResource ProcessRowSelectedBrush}"
                                        Visibility="{x:Bind IsPinned, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                        IsHitTestVisible="False"/>
                                <Border Grid.Column="0" Width="16" Height="16"/>
                                <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" Grid.Column="1" VerticalAlignment="Center" Margin="20,0,0,0" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                                <TextBlock Text="{x:Bind CpuPercentDisplay, Mode=OneWay}" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                                <TextBlock Text="{x:Bind MemoryDisplay, Mode=OneWay}" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                                <TextBlock Text="{x:Bind GpuPercentDisplayOrDash, Mode=OneWay}" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                                <StackPanel Orientation="Horizontal" Spacing="8" Grid.Column="5" VerticalAlignment="Center">
                                    <Button Background="Transparent" BorderThickness="0" Padding="0" Click="PinProcessButton_Click" CommandParameter="{x:Bind}">
                                        <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE718;"/>
                                    </Button>
                                    <Button Background="Transparent" BorderThickness="0" Padding="0" Click="OpenProcessLocationButton_Click" CommandParameter="{x:Bind}">
                                        <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE721;"/>
                                    </Button>
                                    <Button Background="Transparent" BorderThickness="0" Padding="0" Click="KillProcessButton_Click" CommandParameter="{x:Bind}">
                                        <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE711;"/>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </DataTemplate>

        <local:ProcessTemplateSelector x:Key="ProcessTemplateSelector"
                                       LeafTemplate="{StaticResource LeafProcessTemplate}"
                                       ParentTemplate="{StaticResource ParentProcessTemplate}"/>
    </Page.Resources>

    <Grid Padding="24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,0,0,12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Processes" FontSize="20" FontWeight="SemiBold"/>
            <TextBox x:Name="SearchBox" Grid.Column="1" PlaceholderText="Search processes..." HorizontalAlignment="Stretch"/>
            <Button Grid.Column="2" Content="Search" Margin="8,0,0,0" Click="SearchButton_Click"/>
        </Grid>

        <Border Grid.Row="1" Background="{StaticResource App.CardGradientBrush}" BorderBrush="{StaticResource App.CardBorder}" BorderThickness="1" CornerRadius="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Headers with clickable sort and direction chevrons -->
                <Grid Grid.Row="0" Padding="12" Background="{StaticResource App.CardHeaderBrush}" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="140"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Background="Transparent" BorderThickness="0" Padding="0" HorizontalContentAlignment="Left" Click="SortByName_Click">
                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <TextBlock Text="Process" FontWeight="SemiBold"/>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="{x:Bind ViewModel.NameSortGlyph, Mode=OneWay}"/>
                        </StackPanel>
                    </Button>
                    <Button Grid.Column="2" Background="Transparent" BorderThickness="0" Padding="0" HorizontalContentAlignment="Left" Click="SortByCpu_Click">
                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <TextBlock Text="CPU" FontWeight="SemiBold"/>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="{x:Bind ViewModel.CpuSortGlyph, Mode=OneWay}"/>
                        </StackPanel>
                    </Button>
                    <Button Grid.Column="3" Background="Transparent" BorderThickness="0" Padding="0" HorizontalContentAlignment="Left" Click="SortByRam_Click">
                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <TextBlock Text="RAM" FontWeight="SemiBold"/>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="{x:Bind ViewModel.RamSortGlyph, Mode=OneWay}"/>
                        </StackPanel>
                    </Button>
                    <Button Grid.Column="4" Background="Transparent" BorderThickness="0" Padding="0" HorizontalContentAlignment="Left" Click="SortByGpu_Click">
                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <TextBlock Text="GPU" FontWeight="SemiBold"/>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="{x:Bind ViewModel.GpuSortGlyph, Mode=OneWay}"/>
                        </StackPanel>
                    </Button>
                    <TextBlock Grid.Column="5" Text="Actions" FontWeight="SemiBold"/>
                </Grid>

                <ListView x:Name="processesList" Grid.Row="1" ItemsSource="{x:Bind ViewModel.VisibleProcesses, Mode=OneWay}"
                          SelectionMode="None"
                          IsItemClickEnabled="False"
                          ItemTemplateSelector="{StaticResource ProcessTemplateSelector}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel ItemsUpdatingScrollMode="KeepItemsInView"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter Property="BorderBrush" Value="#2A2C36"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Setter Property="IsTabStop" Value="False"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.IsSwipeEnabled>False</ListView.IsSwipeEnabled>
                </ListView>
            </Grid>
        </Border>
    </Grid>
</Page>


