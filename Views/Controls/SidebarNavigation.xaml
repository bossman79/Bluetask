<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="Bluetask.Controls.SidebarNavigation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Name="SidebarControl">

    <UserControl.Resources>
        <!-- Blue Gradient Brushes -->
        <LinearGradientBrush x:Key="AppIconGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF2196F3" Offset="0"/>
            <GradientStop Color="#FF1976D2" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SidebarGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF2C3E50" Offset="0"/>
            <GradientStop Color="#FF34495E" Offset="0.5"/>
            <GradientStop Color="#FF2C3E50" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ActiveItemGradient" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#3340A2FF" Offset="0"/>
            <GradientStop Color="#1A40A2FF" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="AccentBorderGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF409EFF" Offset="0"/>
            <GradientStop Color="#FF00CED1" Offset="1"/>
        </LinearGradientBrush>

        <!-- Colors -->
        <SolidColorBrush x:Key="BackgroundBrush" Color="#FF1A1F2E"/>
        <SolidColorBrush x:Key="TextBrush" Color="#B3FFFFFF"/>
        <SolidColorBrush x:Key="TextHoverBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#3340A2FF"/>
        <SolidColorBrush x:Key="HoverBrush" Color="#1A40A2FF"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#FF409EFF"/>

        <!-- Navigation Item Template Style -->
        <Style x:Key="NavItemStyle" TargetType="Button">
            <Setter Property="Height" Value="56"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Background for selection -->
                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}"/>

                            <!-- Hover overlay (independent from selection background) -->
                            <Border x:Name="HoverOverlay" Background="{StaticResource HoverBrush}" Opacity="0"/>

                            <!-- Active/hover left borders as separate layers to avoid conflicts -->
                            <Rectangle x:Name="LeftBorderActive" Width="3" HorizontalAlignment="Left" Fill="{StaticResource AccentBorderGradient}" VerticalAlignment="Stretch" Opacity="0"/>
                            <Rectangle x:Name="LeftBorderHover" Width="3" HorizontalAlignment="Left" Fill="{StaticResource AccentBrush}" VerticalAlignment="Stretch" Opacity="0"/>

                            <!-- Content -->
                            <Grid Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Icon Container -->
                                <Border Grid.Column="0" Width="64" Height="56">
                                    <ContentPresenter x:Name="IconPresenter"
                                                      Content="{TemplateBinding Tag}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                </Border>

                                <!-- Text -->
                                <TextBlock Grid.Column="1" x:Name="NavText"
                                           Text="{TemplateBinding Content}"
                                           FontSize="14" FontWeight="Medium"
                                           Foreground="{StaticResource TextBrush}"
                                           VerticalAlignment="Center"
                                           Margin="0,0,16,0"
                                           Opacity="0">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="-10"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <VisualState.Setters>
                                            <Setter Target="HoverOverlay.Opacity" Value="0"/>
                                            <Setter Target="LeftBorderHover.Opacity" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="HoverOverlay.Opacity" Value="1"/>
                                            <Setter Target="LeftBorderHover.Opacity" Value="1"/>
                                            <Setter Target="NavText.Foreground" Value="{StaticResource TextHoverBrush}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="HoverOverlay.Opacity" Value="1"/>
                                            <Setter Target="LeftBorderHover.Opacity" Value="1"/>
                                            <Setter Target="NavText.Foreground" Value="{StaticResource TextHoverBrush}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>

                                <!-- Expanded/Collapsed reveal of text -->
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="NavText" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="NavText" Storyboard.TargetProperty="(TextBlock.RenderTransform).(TranslateTransform.X)" To="-10" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="NavText" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetName="NavText" Storyboard.TargetProperty="(TextBlock.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <!-- Active selection state (persistent and independent from hover) -->
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualState x:Name="Inactive">
                                        <VisualState.Setters>
                                            <Setter Target="BackgroundElement.Background" Value="Transparent"/>
                                            <Setter Target="LeftBorderActive.Opacity" Value="0"/>
                                            <Setter Target="NavText.Foreground" Value="{StaticResource TextBrush}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Active">
                                        <VisualState.Setters>
                                            <Setter Target="BackgroundElement.Background" Value="{StaticResource ActiveItemGradient}"/>
                                            <Setter Target="LeftBorderActive.Opacity" Value="1"/>
                                            <Setter Target="NavText.Foreground" Value="{StaticResource TextHoverBrush}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- App Icon Style -->
        <Style x:Key="AppIconStyle" TargetType="Border">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="{StaticResource AppIconGradient}"/>
            <Setter Property="CornerRadius" Value="8"/>
        </Style>

        <!-- Expand/Collapse Storyboards for the sidebar shell (width + header info) -->
        <Storyboard x:Key="ExpandSidebarStoryboard">
            <DoubleAnimation Storyboard.TargetName="SidebarBorder" Storyboard.TargetProperty="Width" To="240" Duration="0:0:0.3" EnableDependentAnimation="True">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="AppInfo" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" BeginTime="0:0:0.1"/>
            <DoubleAnimation Storyboard.TargetName="AppInfo" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.3" BeginTime="0:0:0.1">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="CollapseSidebarStoryboard">
            <DoubleAnimation Storyboard.TargetName="SidebarBorder" Storyboard.TargetProperty="Width" To="64" Duration="0:0:0.3" EnableDependentAnimation="True">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="AppInfo" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetName="AppInfo" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="-10" Duration="0:0:0.3">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>

    <Grid>
        <!-- Main Sidebar -->
        <Border x:Name="SidebarBorder"
                Width="64"
                Background="{StaticResource SidebarGradient}"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0,0,1,0"
                HorizontalAlignment="Left"
                PointerEntered="SidebarHover_Entered"
                PointerExited="SidebarHover_Exited">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Header -->
                <Border Grid.Row="0"
                        BorderBrush="#1AFFFFFF"
                        BorderThickness="0,0,0,1"
                        Padding="16"
                        MinHeight="80">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- App Icon -->
                        <Border Grid.Column="0" Style="{StaticResource AppIconStyle}">
                            <Image Width="20" Height="20" Stretch="Uniform" Source="ms-appx:///Assets/SpeedIcon.png"/>
                        </Border>

                        <!-- App Info -->
                        <StackPanel Grid.Column="1" x:Name="AppInfo"
                                   Margin="12,0,0,0"
                                   VerticalAlignment="Center"
                                   Opacity="0">
                            <StackPanel.RenderTransform>
                                <TranslateTransform X="-10"/>
                            </StackPanel.RenderTransform>
                            <TextBlock Text="BlueTask"
                                      FontSize="16"
                                      FontWeight="SemiBold"
                                      Foreground="White"/>
                            <TextBlock Text="Pre-Release Build v0.73"
                                      FontSize="11"
                                      Foreground="#80FFFFFF"/>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Navigation Menu -->
                <StackPanel Grid.Row="1" Margin="0">
                    <!-- Dashboard -->
                    <Button x:Name="DashboardBtn" Style="{StaticResource NavItemStyle}" Content="Dashboard" Click="NavItem_Click">
                        <Button.Tag>
                            <Path Width="20" Height="20" Fill="{StaticResource TextBrush}" Stretch="Uniform"
                                  Data="M3 13h1v7c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2v-7h1a1 1 0 0 0 .707-1.707l-9-9a.999.999 0 0 0-1.414 0l-9 9A1 1 0 0 0 3 13zm9-8.586l6 6V15l.001 5H6v-9.585l6-6.001zM12 18a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                        </Button.Tag>
                    </Button>

                    <!-- Processes -->
                    <Button x:Name="ProcessesBtn" Style="{StaticResource NavItemStyle}" Content="Processes" Click="NavItem_Click">
                        <Button.Tag>
                            <Path Width="20" Height="20" Fill="{StaticResource TextBrush}" Stretch="Uniform"
                                  Data="M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z"/>
                        </Button.Tag>
                    </Button>

                    <!-- Performance -->
                    <Button x:Name="PerformanceBtn" Style="{StaticResource NavItemStyle}" Content="Performance" Click="NavItem_Click">
                        <Button.Tag>
                            <Path Width="20" Height="20" Fill="{StaticResource TextBrush}" Stretch="Uniform"
                                  Data="M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z"/>
                        </Button.Tag>
                    </Button>

                    <!-- Settings -->
                    <Button x:Name="SettingsBtn" Style="{StaticResource NavItemStyle}" Content="Settings" Click="NavItem_Click">
                        <Button.Tag>
                            <Path Width="20" Height="20" Fill="{StaticResource TextBrush}" Stretch="Uniform"
                                  Data="M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z"/>
                        </Button.Tag>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        
    </Grid>
</UserControl>


